type User {
  id: ID!
  employe: Employe!
  username: String!
  password: String!
  role: String!
  status: String
}

input userInput {
  employe: ID!
  username: String!
  password: String!
  role: RoleData!
}

input UserSignInInput {
  username: String!
  password: String!
}

input UserEditInput {
  oldpassword: String
  newpassword: String
  confirmpassword: String
}

type Token {
  token: String!
}

type Query {
  users: [User!]!
  user(id: ID!): User
}

type Mutation {
  createUser(data: userInput): Token!
  signIn(credentials: UserSignInInput): Token!
  changePassword(data: UserEditInput!): User!
  deleteUser(id: ID!): Boolean!
  changeStatus(id: ID!): User!
}
